<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.jenkins-ci.plugins</groupId>
    <artifactId>plugin</artifactId>
    <version>3.48</version>
    <relativePath />
  </parent>

  <groupId>io.jenkins.plugins</groupId>
  <artifactId>warnings-ng</artifactId>
  <packaging>hpi</packaging>
  <name>Warnings Next Generation Plugin</name>
  <version>6.0.0-SNAPSHOT</version>
  <url>https://wiki.jenkins.io/x/1YTeCQ</url>
  <description>Jenkins Warnings Next Generation plugin collects compiler warnings or issues reported by static
    analysis tools and visualizes the results. It has built-in support for numerous static analysis tools
    (including several compilers), see the list of supported report formats.
  </description>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <!-- Override properties defined in parent POM -->
    <jenkins.version>2.138.4</jenkins.version>
    <java.level>8</java.level>
    <jenkins-test-harness.version>2.49</jenkins-test-harness.version>

    <!-- Project Dependencies Configuration -->
    <analysis-model-api.version>5.3.0</analysis-model-api.version>
    <analysis-model.version>5.3.0</analysis-model.version>
    <forensics-api-plugin.version>0.3.0</forensics-api-plugin.version>
    <git-forensics-plugin.version>0.2.0</git-forensics-plugin.version>

    <spotbugs.annotations>3.1.12</spotbugs.annotations>
    <commons.lang.version>3.9</commons.lang.version>
    <commons.io.version>2.6</commons.io.version>
    <commons.digester.version>3.2</commons.digester.version>
    <commons.text.version>1.7</commons.text.version>
    <eclipse-collections.version>10.0.0</eclipse-collections.version>
    <j2html.version>1.4.0</j2html.version>

    <bridge-method-annotation.version>1.18</bridge-method-annotation.version>
    <json.version>20190722</json.version>
    <jackson-databind.version>2.9.9</jackson-databind.version>
    <slf4j.version>1.7.28</slf4j.version>
    <prettytime.version>4.0.2.Final</prettytime.version>

    <!-- Test Library Dependencies Versions -->
    <junit.version>5.5.1</junit.version>
    <junit-platform-launcher.version>1.5.1</junit-platform-launcher.version>
    <mockito.version>3.0.0</mockito.version>
    <assertj.version>3.13.2</assertj.version>
    <archunit.version>0.11.0</archunit.version>
    <json-unit-fluent.version>2.8.0</json-unit-fluent.version>
    <xmlunit.version>1.6</xmlunit.version>
    <jsoup.version>1.12.1</jsoup.version>
    <json-smart.version>2.3</json-smart.version>

    <!-- Jenkins Plug-in Dependencies Versions -->
    <token-macro.version>2.5</token-macro.version>
    <jenkins-maven-plugin.version>3.1.2</jenkins-maven-plugin.version>
    <matrix-project.version>1.13</matrix-project.version>
    <junit-plugin.version>1.24</junit-plugin.version>
    <git-plugin.version>3.9.1</git-plugin.version>
    <workflow-api.version>2.34</workflow-api.version>
    <workflow-cps.version>2.67</workflow-cps.version>
    <workflow-step.version>2.19</workflow-step.version>
    <workflow-job.version>2.32</workflow-job.version>
    <structs.version>1.19</structs.version>
    <antisamy-markup-formatter.version>1.5</antisamy-markup-formatter.version>
    <dashboard-view.version>2.9.4</dashboard-view.version>
    <script-security.version>1.58</script-security.version>
    <folder-plugin.version>6.1.2</folder-plugin.version>
    <credentials.version>2.1.14</credentials.version>

    <!-- Maven plug-in versions -->
    <maven-pmd-plugin.version>3.12.0</maven-pmd-plugin.version>
    <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
    <pmd.version>6.17.0</pmd.version>
    <maven-checkstyle-plugin.version>3.1.0</maven-checkstyle-plugin.version>
    <checkstyle.version>8.23</checkstyle.version>
    <spotbugs-maven-plugin.version>3.1.12.2</spotbugs-maven-plugin.version>
    <jacoco-maven-plugin.version>0.8.4</jacoco-maven-plugin.version>
    <maven-surefire.plugin>3.0.0-M3</maven-surefire.plugin>
    <maven-failsafe.plugin>3.0.0-M3</maven-failsafe.plugin>
    <jar.maven.plugin>3.0.2</jar.maven.plugin>
    <maven-error-prone-plugin.version>2.8.5</maven-error-prone-plugin.version>
    <error-prone.version>2.3.1</error-prone.version>
    <versions-maven-plugin.version>2.7</versions-maven-plugin.version>
    <depgraph-maven-plugin.version>3.3.0</depgraph-maven-plugin.version>
    <animal-sniffer-maven-plugin.version>1.18</animal-sniffer-maven-plugin.version>
    <maven-hpi-plugin.version>2.5</maven-hpi-plugin.version>
    <maven-javadoc-plugin.version>3.1.1</maven-javadoc-plugin.version>
    <maven-jar-plugin.version>3.1.2</maven-jar-plugin.version>
    <pitest-maven.plugin>1.4.9</pitest-maven.plugin>
    <pitest-maven.junit5.plugin>0.9</pitest-maven.junit5.plugin>
    <revapi-maven-plugin.version>0.11.1</revapi-maven-plugin.version>
    <revapi-java.version>0.19.1</revapi-java.version>

    <spotbugs.failOnError>false</spotbugs.failOnError>

    <!-- Maven Surefire ArgLine -->
    <argLine>-Djava.awt.headless=true -Xmx1024m</argLine>
  </properties>

  <licenses>
    <license>
      <name>MIT license</name>
      <comments>All source code is under the MIT license.</comments>
    </license>
  </licenses>

  <developers>
    <developer>
      <name>Ullrich Hafner</name>
      <id>uhafner</id>
      <email>ullrich.hafner@gmail.com</email>
    </developer>
  </developers>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.jenkins-ci.plugins</groupId>
        <artifactId>credentials</artifactId>
        <version>2.1.16</version>
      </dependency>
      <dependency>
        <groupId>com.google.code.gson</groupId>
        <artifactId>gson</artifactId>
        <version>2.8.5</version>
      </dependency>
      <dependency>
        <groupId>joda-time</groupId>
        <artifactId>joda-time</artifactId>
        <version>2.9.9</version>
      </dependency>
      <dependency>
        <groupId>org.jenkins-ci</groupId>
        <artifactId>annotation-indexer</artifactId>
        <version>1.12</version>
      </dependency>
      <dependency>
        <groupId>org.jenkins-ci.plugins</groupId>
        <artifactId>mailer</artifactId>
        <version>1.20</version>
      </dependency>
      <dependency>
        <groupId>org.jenkins-ci.plugins</groupId>
        <artifactId>scm-api</artifactId>
        <version>2.2.7</version>
      </dependency>
      <dependency>
        <groupId>org.jenkins-ci.plugins.workflow</groupId>
        <artifactId>workflow-scm-step</artifactId>
        <version>2.6</version>
      </dependency>
      <dependency>
        <groupId>commons-net</groupId>
        <artifactId>commons-net</artifactId>
        <version>3.6</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>${commons.lang.version}</version>
      </dependency>
      <dependency>
        <groupId>org.jenkins-ci.plugins</groupId>
        <artifactId>ssh-credentials</artifactId>
        <version>1.13</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.version}</version>
      </dependency>

    </dependencies>
  </dependencyManagement>

  <dependencies>

    <!-- Project Library Dependencies -->
    <dependency>
      <groupId>io.jenkins.plugins</groupId>
      <artifactId>analysis-model-api</artifactId>
      <version>${analysis-model-api.version}</version>
    </dependency>
    <dependency>
      <groupId>org.ocpsoft.prettytime</groupId>
      <artifactId>prettytime</artifactId>
      <version>${prettytime.version}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-nop</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    <dependency>
      <groupId>com.github.spotbugs</groupId>
      <artifactId>spotbugs-annotations</artifactId>
      <version>${spotbugs.annotations}</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.collections</groupId>
      <artifactId>eclipse-collections-api</artifactId>
      <version>${eclipse-collections.version}</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.collections</groupId>
      <artifactId>eclipse-collections</artifactId>
      <version>${eclipse-collections.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>${commons.lang.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>${commons.io.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-digester3</artifactId>
      <version>${commons.digester.version}</version>
      <exclusions>
        <exclusion>
          <artifactId>asm</artifactId>
          <groupId>asm</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-text</artifactId>
      <version>${commons.text.version}</version>
    </dependency>
    <dependency>
      <groupId>com.j2html</groupId>
      <artifactId>j2html</artifactId>
      <version>${j2html.version}</version>
    </dependency>
    <dependency>
      <groupId>net.minidev</groupId>
      <artifactId>json-smart</artifactId>
      <version>${json-smart.version}</version>
    </dependency>

    <!-- PMD Messages -->
    <dependency>
      <groupId>net.sourceforge.pmd</groupId>
      <artifactId>pmd-core</artifactId>
      <version>${pmd.version}</version>
      <exclusions>
        <exclusion>
          <groupId>com.ibm.icu</groupId>
          <artifactId>icu4j</artifactId>
        </exclusion>
        <exclusion>
          <groupId>net.sourceforge.saxon</groupId>
          <artifactId>saxon</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>net.sourceforge.pmd</groupId>
      <artifactId>pmd-java</artifactId>
      <version>${pmd.version}</version>
      <exclusions>
        <exclusion>
          <groupId>net.sourceforge.saxon</groupId>
          <artifactId>saxon</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${jackson-databind.version}</version>
    </dependency>

    <!-- Required Jenkins Plug-in Dependencies -->
    <dependency>
      <groupId>org.jenkins-ci.plugins</groupId>
      <artifactId>script-security</artifactId>
      <version>${script-security.version}</version>
    </dependency>
    <dependency>
      <groupId>org.jenkins-ci.plugins.workflow</groupId>
      <artifactId>workflow-api</artifactId>
      <version>${workflow-api.version}</version>
    </dependency>
    <dependency>
      <groupId>org.jenkins-ci.plugins.workflow</groupId>
      <artifactId>workflow-cps</artifactId>
      <version>${workflow-cps.version}</version>
    </dependency>
    <dependency>
      <groupId>org.jenkins-ci.plugins.workflow</groupId>
      <artifactId>workflow-step-api</artifactId>
      <version>${workflow-step.version}</version>
    </dependency>
    <dependency>
      <groupId>org.jenkins-ci.plugins.workflow</groupId>
      <artifactId>workflow-job</artifactId>
      <version>${workflow-job.version}</version>
    </dependency>
    <dependency>
      <groupId>org.jenkins-ci.plugins</groupId>
      <artifactId>structs</artifactId>
      <version>${structs.version}</version>
    </dependency>
    <dependency>
      <groupId>org.jenkins-ci.plugins</groupId>
      <artifactId>antisamy-markup-formatter</artifactId>
      <version>${antisamy-markup-formatter.version}</version>
    </dependency>
    <dependency>
      <groupId>org.jenkins-ci.plugins</groupId>
      <artifactId>credentials</artifactId>
      <version>${credentials.version}</version>
    </dependency>

    <!-- Optional Jenkins Plug-in Dependencies -->
    <dependency>
      <groupId>org.jenkins-ci.plugins</groupId>
      <artifactId>matrix-project</artifactId>
      <version>${matrix-project.version}</version>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.jenkins-ci.plugins</groupId>
      <artifactId>token-macro</artifactId>
      <version>${token-macro.version}</version>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>io.jenkins.plugins</groupId>
      <artifactId>git-forensics</artifactId>
      <version>${git-forensics-plugin.version}</version>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>io.jenkins.plugins</groupId>
      <artifactId>forensics-api</artifactId>
      <version>${forensics-api-plugin.version}</version>
    </dependency>
    <dependency>
      <groupId>org.jenkins-ci.plugins</groupId>
      <artifactId>dashboard-view</artifactId>
      <version>${dashboard-view.version}</version>
      <optional>true</optional>
    </dependency>

    <!-- Test Dependencies -->
    <dependency>
      <groupId>io.jenkins.plugins</groupId>
      <artifactId>forensics-api</artifactId>
      <version>${forensics-api-plugin.version}</version>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.vintage</groupId>
      <artifactId>junit-vintage-engine</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-launcher</artifactId>
      <version>${junit-platform-launcher.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>${assertj.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.tngtech.archunit</groupId>
      <artifactId>archunit-junit5-api</artifactId>
      <version>${archunit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.tngtech.archunit</groupId>
      <artifactId>archunit-junit5-engine</artifactId>
      <version>${archunit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>net.javacrumbs.json-unit</groupId>
      <artifactId>json-unit-assertj</artifactId>
      <version>${json-unit-fluent.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>edu.hm.hafner</groupId>
      <artifactId>analysis-model</artifactId>
      <version>${analysis-model.version}</version>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.json</groupId>
      <artifactId>json</artifactId>
      <version>${json.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jsoup</groupId>
      <artifactId>jsoup</artifactId>
      <version>${jsoup.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jenkins-ci.main</groupId>
      <artifactId>jenkins-test-harness-tools</artifactId>
      <version>2.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>xmlunit</groupId>
      <artifactId>xmlunit</artifactId>
      <version>${xmlunit.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- Form element path plugin to simplify location of UI elements in HtmlUnit tests -->
    <dependency>
      <groupId>org.jenkins-ci.plugins</groupId>
      <artifactId>form-element-path</artifactId>
      <version>1.8</version>
      <scope>test</scope>
    </dependency>

    <!-- Jenkins Plug-in Dependencies required for integration tests -->
    <dependency>
      <groupId>org.jenkins-ci.plugins</groupId>
      <artifactId>flexible-publish</artifactId>
      <version>0.15.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jenkins-ci.plugins</groupId>
      <artifactId>envinject</artifactId>
      <version>2.1.6</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jenkins-ci.plugins</groupId>
      <artifactId>timestamper</artifactId>
      <version>1.9</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jenkins-ci.main</groupId>
      <artifactId>maven-plugin</artifactId>
      <version>${jenkins-maven-plugin.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jenkins-ci.plugins</groupId>
      <artifactId>job-dsl</artifactId>
      <version>1.74</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.jenkins</groupId>
      <artifactId>configuration-as-code</artifactId>
      <version>1.18</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jenkins-ci.plugins</groupId>
      <artifactId>cloudbees-folder</artifactId>
      <version>${folder-plugin.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- stage -->
    <dependency>
      <groupId>org.jenkins-ci.plugins</groupId>
      <artifactId>pipeline-stage-step</artifactId>
      <version>2.3</version>
      <scope>test</scope>
    </dependency>
    <!-- node -->
    <dependency>
      <groupId>org.jenkins-ci.plugins.workflow</groupId>
      <artifactId>workflow-durable-task-step</artifactId>
      <version>2.15</version>
      <scope>test</scope>
    </dependency>
    <!-- recorder -> step -->
    <dependency>
      <groupId>org.jenkins-ci.plugins.workflow</groupId>
      <artifactId>workflow-basic-steps</artifactId>
      <version>2.7</version>
      <scope>test</scope>
    </dependency>
    <!-- Docker Agents -->
    <dependency>
      <groupId>org.jenkins-ci.test</groupId>
      <artifactId>docker-fixtures</artifactId>
      <version>1.8</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jenkins-ci.plugins</groupId>
      <artifactId>ssh-slaves</artifactId>
      <version>1.25</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jenkins-ci.plugins</groupId>
      <artifactId>jdk-tool</artifactId>
      <version>1.2</version>
      <scope>test</scope>
    </dependency>

    <!-- GitSampleRepoRule -->
    <dependency>
      <groupId>org.jenkins-ci.plugins</groupId>
      <artifactId>git</artifactId>
      <version>${git-plugin.version}</version>
      <scope>test</scope>
      <type>test-jar</type>
    </dependency>
    <dependency>
      <groupId>org.jenkins-ci.plugins</groupId>
      <artifactId>scm-api</artifactId>
      <version>2.2.7</version>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>

    <!-- Declarative Pipeline -->
    <dependency>
      <groupId>org.jenkins-ci.plugins.workflow</groupId>
      <artifactId>workflow-support</artifactId>
      <version>3.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jenkinsci.plugins</groupId>
      <artifactId>pipeline-model-definition</artifactId>
      <version>1.2</version>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>
    <plugins>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <configuration>
          <source>${java.level}</source>
          <target>${java.level}</target>
          <testSource>${java.level}</testSource>
          <testTarget>${java.level}</testTarget>
          <compilerArgs>
            <arg>-Xlint:all</arg>
          </compilerArgs>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire.plugin}</version>
        <configuration>
          <excludes>
            <exclude>**/*ITest.*</exclude>
            <exclude>**/InjectedTest.*</exclude>
          </excludes>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>com.tngtech.archunit</groupId>
            <artifactId>archunit-junit5-engine</artifactId>
            <version>${archunit.version}</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>${maven-failsafe.plugin}</version>
        <configuration>
          <includes>
            <include>**/*ITest.*</include>
            <include>**/*InjectedTest.*</include>
          </includes>
          <reuseForks>false</reuseForks>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>${maven-javadoc-plugin.version}</version>
        <configuration>
          <additionalOptions>-Xdoclint:all</additionalOptions>
          <failOnWarnings>false</failOnWarnings>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>javadoc</goal>
            </goals>
            <!-- As soon as possible but after required generate-sources phase -->
            <phase>process-sources</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.assertj</groupId>
        <artifactId>assertj-assertions-generator-maven-plugin</artifactId>
        <version>2.2.0</version>
        <executions>
          <execution>
            <goals>
              <goal>generate-assertions</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <packages>
            <package>io.jenkins.plugins.analysis.core.scm</package>
            <package>io.jenkins.plugins.analysis.core.model</package>
            <package>io.jenkins.plugins.analysis.core.util</package>
          </packages>
          <entryPointClassPackage>io.jenkins.plugins.analysis.core.assertions</entryPointClassPackage>
          <excludes>
            <exclude>.*ITest</exclude>
            <exclude>.*Action</exclude>
            <exclude>.*Thresholds</exclude>
          </excludes>
          <cleanTargetDir>true</cleanTargetDir>
          <hierarchical>false</hierarchical>
          <generateBddAssertions>false</generateBddAssertions>
          <generateJUnitSoftAssertions>false</generateJUnitSoftAssertions>
          <templates>
            <templatesDirectory>${project.basedir}/etc/templates/</templatesDirectory>
            <assertionsEntryPointClass>assertions_entry_point_class_template.txt</assertionsEntryPointClass>
          </templates>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.pitest</groupId>
        <artifactId>pitest-maven</artifactId>
        <version>${pitest-maven.plugin}</version>
        <dependencies>
          <dependency>
            <groupId>org.pitest</groupId>
            <artifactId>pitest-junit5-plugin</artifactId>
            <version>${pitest-maven.junit5.plugin}</version>
          </dependency>
        </dependencies>
        <configuration>
          <outputFormats>XML,HTML</outputFormats>
          <verbose>true</verbose>
          <targetClasses>
            <param>io.jenkins.plugins.analysis.*</param>
          </targetClasses>
          <targetTests>
            <param>io.jenkins.plugins.analysis.*</param>
          </targetTests>
          <excludedTestClasses>
            <param>*ITest</param>
            <param>*ToolsLister</param>
          </excludedTestClasses>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>${maven-checkstyle-plugin.version}</version>
        <executions>
          <execution>
            <id>run-checkstyle</id>
            <goals>
              <goal>checkstyle</goal>
            </goals>
            <phase>verify</phase>
          </execution>
        </executions>
        <configuration>
          <failOnViolation>false</failOnViolation>
          <configLocation>etc/checkstyle-configuration.xml</configLocation>
          <includeTestSourceDirectory>true</includeTestSourceDirectory>
          <excludes>**/*Assert*.java,**/InjectedTest.java,**/Messages.java</excludes>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>com.puppycrawl.tools</groupId>
            <artifactId>checkstyle</artifactId>
            <version>${checkstyle.version}</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-pmd-plugin</artifactId>
        <version>${maven-pmd-plugin.version}</version>
        <executions>
          <execution>
            <id>run-pmd</id>
            <goals>
              <goal>pmd</goal>
              <goal>cpd</goal>
            </goals>
            <phase>verify</phase>
          </execution>
        </executions>
        <configuration>
          <rulesets>
            <ruleset>etc/pmd-configuration.xml</ruleset>
          </rulesets>
          <excludeRoots>
            <excludeRoot>target/generated-sources/localizer</excludeRoot>
            <excludeRoot>target/generated-test-sources/assertj-assertions</excludeRoot>
          </excludeRoots>
          <excludes>
            <exclude>**/InjectedTest.java</exclude>
          </excludes>
          <includeTests>true</includeTests>
          <minimumTokens>50</minimumTokens>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>net.sourceforge.pmd</groupId>
            <artifactId>pmd-core</artifactId>
            <version>${pmd.version}</version>
          </dependency>
          <dependency>
            <groupId>net.sourceforge.pmd</groupId>
            <artifactId>pmd-java</artifactId>
            <version>${pmd.version}</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-maven-plugin</artifactId>
        <version>${spotbugs-maven-plugin.version}</version>
        <executions>
          <execution>
            <id>run-spotbugs</id>
            <goals>
              <goal>spotbugs</goal>
            </goals>
            <phase>verify</phase>
          </execution>
        </executions>
        <configuration>
          <failOnError>false</failOnError>
          <xmlOutput>true</xmlOutput>
          <threshold>Low</threshold>
          <effort>Max</effort>
          <relaxed>false</relaxed>
          <fork>true</fork>
          <excludeFilterFile>etc/spotbugs-exclusion-filter.xml</excludeFilterFile>
          <includeTests>true</includeTests>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.revapi</groupId>
        <artifactId>revapi-maven-plugin</artifactId>
        <version>${revapi-maven-plugin.version}</version>
        <dependencies>
          <dependency>
            <groupId>org.revapi</groupId>
            <artifactId>revapi-java</artifactId>
            <version>${revapi-java.version}</version>
          </dependency>
          <dependency>
            <groupId>io.jenkins.tools</groupId>
            <artifactId>revapi-hpi-extractor</artifactId>
            <version>1.0.1</version>
          </dependency>
        </dependencies>
        <configuration>
          <failBuildOnProblemsFound>false</failBuildOnProblemsFound>
          <!-- Including provided-scope dependencies like Jenkins core results in too many false positives -->
          <checkDependencies>false</checkDependencies>
          <analysisConfiguration>
            <revapi.semver.ignore>
              <enabled>true</enabled>
            </revapi.semver.ignore>
            <revapi.ignore>
              <item>
                <code>java.method.returnTypeChanged</code>
                <newType>edu.hm.hafner.analysis.IssueParser</newType>
                <justification>The parser should not be visible.</justification>
              </item>
              <item>
                <code>java.method.removed</code>
                <classQualifiedName>io.jenkins.plugins.analysis.core.util.AffectedFilesResolver</classQualifiedName>
                <methodName>copyFilesWithAnnotationsToBuildFolder</methodName>
                <justification>Now method copies on the master.</justification>
              </item>
              <item>
                <regex>true</regex>
                <code>java.missing.*</code>
                <justification>Dependencies are not being checked, so they are reported as missing</justification>
              </item>
              <item>
                <code>java.annotation.removed</code>
                <classQualifiedName>io.jenkins.plugins.analysis.core.steps.IssuesRecorder.Descriptor</classQualifiedName>
                <justification>Symbol-based usage migrated transparently to RecordIssuesStep</justification>
              </item>
              <item>
                <code>java.method.removed</code>
                <classQualifiedName>io.jenkins.plugins.analysis.core.util.QualityGateStatus</classQualifiedName>
                <justification>Not part of the plugin's public API</justification>
              </item>
              <item>
                <regex>true</regex>
                <code>.*</code>
                <classQualifiedName>io.jenkins.plugins.analysis.warnings.WarningsPlugin</classQualifiedName>
                <justification>The tool is not part of API.</justification>
              </item>
            </revapi.ignore>
          </analysisConfiguration>
        </configuration>
        <executions>
          <execution>
            <id>run-revapi</id>
            <goals>
              <goal>check</goal>
            </goals>
            <phase>verify</phase>
          </execution>
        </executions>
      </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${maven-jar-plugin.version}</version>
          <configuration>
            <archive>
              <manifestEntries>
                <Built-By>Ullrich Hafner</Built-By>
                <Url>${project.scm.url}</Url>
                <Jenkins-ClassFilter-Whitelisted>true</Jenkins-ClassFilter-Whitelisted>
              </manifestEntries>
            </archive>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>animal-sniffer-maven-plugin</artifactId>
          <version>${animal-sniffer-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>versions-maven-plugin</artifactId>
          <version>${versions-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-enforcer-plugin</artifactId>
          <executions>
            <execution>
              <id>display-info</id>
              <configuration>
                <rules>
                  <enforceBytecodeVersion>
                    <ignoreClasses>
                      <!-- asm dependency from PMD contains a java9 module-info.class -->
                      <ignoreClass>module-info</ignoreClass>
                      <!-- Junit >= 5.3 contains some java9 classes -->
                      <ignoreClass>**/ModuleUtils*</ignoreClass>
                    </ignoreClasses>
                  </enforceBytecodeVersion>
                </rules>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>com.github.ferstl</groupId>
          <artifactId>depgraph-maven-plugin</artifactId>
          <version>${depgraph-maven-plugin.version}</version>
          <configuration>
            <graphFormat>puml</graphFormat>
            <scope>runtime</scope>
            <excludes>
            </excludes>
            <showVersions>true</showVersions>
            <transitiveExcludes>
              <exclude>*</exclude>
            </transitiveExcludes>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${jacoco-maven-plugin.version}</version>
          <configuration>
            <includes>
              <include>io/jenkins/plugins/analysis/**/*</include>
            </includes>
            <excludes>
              <exclude>**/JenkinsFacade.*</exclude>
              <exclude>**/*BlameRunner.*</exclude>
              <exclude>**/NullAnalysisHistory.*</exclude>
            </excludes>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
            </execution>
            <execution>
              <id>report</id>
              <phase>prepare-package</phase>
              <goals>
                <goal>report</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <profiles>
    <profile>
      <id>skip-javadoc-with-tests</id>
      <activation>
        <property>
          <name>skipTests</name>
          <value>true</value>
        </property>
      </activation>
      <properties>
        <maven.javadoc.skip>true</maven.javadoc.skip>
        <spotbugs.skip>true</spotbugs.skip>
        <checkstyle.skip>true</checkstyle.skip>
        <pmd.skip>true</pmd.skip>
      </properties>
    </profile>
  </profiles>

  <scm>
    <connection>scm:git:git://github.com/jenkinsci/${project.artifactId}-plugin.git</connection>
    <developerConnection>scm:git:git@github.com:jenkinsci/${project.artifactId}-plugin.git</developerConnection>
    <url>https://github.com/jenkinsci/${project.artifactId}-plugin</url>
    <tag>HEAD</tag>
  </scm>

  <repositories>
    <repository>
      <id>repo.jenkins-ci.org</id>
      <url>https://repo.jenkins-ci.org/public/</url>
    </repository>
  </repositories>

  <pluginRepositories>
    <pluginRepository>
      <id>repo.jenkins-ci.org</id>
      <url>https://repo.jenkins-ci.org/public/</url>
    </pluginRepository>
  </pluginRepositories>

</project>

